{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"RDUS Capital Structure Analysis\"\n",
        "subtitle: \"\"\n",
        "author: \"\"\n",
        "image: \"charts.png\"\n",
        "categories: [\"Report\", \"Equity\",  \"Research\"]\n",
        "format: \n",
        "  html:\n",
        "    toc: false\n",
        "editor: source \n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "## Radius Reclycling Inc (RDUS) Capital Structure\n",
        "_At the beginning of 2021, Radius Recycling (RDUS) exhibited a promising upward trajectory in earnings, with fluctuations throughout the year. Yet, by the end of 2022, despite making strategic capital investments in acquiring ten new properties, their sales did not reflect the anticipated growth from these investments. From Q2 of 2023, a noticeable decline in revenue became evident. This downturn, potentially a result of the prevailing economic conditions, might suggest a future recovery, thus positioning RDUS's stock, currently trading near the lower Bollinger bands, as a potentially undervalued asset. A deeper examination into their capital structure reveals a dramatic shift: the EPS growth rate soared by 4027% from 2021 to 2022, yet it plateaued with a mere 2% increase in 2023. The first quarter of 2024 marked a concerning trend with a -115% decline in growth._\n",
        "\n",
        "_The year 2022 marked a significant period for RDUS, with a substantial increase in assets between Q2 and Q3. This period saw a rise not only in revenue but also in liabilities, property/plant/equipment, and net income, driven by a major transaction that temporarily boosted sales. However, this surge was followed by a sharp decline in net income in Q4 2022 and continued into Q1 2023 with negative income. The financial analysis of RDUS reveals a complex picture: an increase in the debt-equity ratio from 0.8226 to 0.9253 and a rise in the equity multiplier from 1.8226 to 1.9253, indicating a growing dependence on debt. This is further corroborated by the uptick in the long-term debt ratio from 0.3250 to 0.3638. Despite these challenges, including a decrease in liquidity ratios and a negative profit margin, RDUS's strategic investments in property and equipment have yet to yield the expected returns, suggesting a potential need for optimizing asset utilization and possibly divesting underperforming assets._\n",
        "\n",
        "_In light of these financial dynamics, RDUS's recent investment in new properties and the shift in its capital structure reflect a critical juncture. The company's increased borrowing costs, evidenced by a slight rise in WACC from 8.9715 to 9.0268, coupled with operational inefficiencies, underscore the urgency for strategic adjustments. The current capital structure, showing a stark contrast with an optimal structure of 40.48% D/E and a WACC of 11.76%, highlights the need for RDUS to rebalance its debt and equity mix. The high current D/E of 98.6% underscores an over-reliance on debt, impacting the firm's financial flexibility and growth potential. As RDUS navigates this challenging landscape, a focus on reducing debt, improving operational efficiency, and strategically managing its investment in long-term assets becomes paramount for sustainable growth and profitability._\n",
        "\n",
        "\n",
        "\n",
        "## RDUS Capital Structure analysis\n",
        "\n",
        "_The financial analysis of RDUS reveals crucial factors influencing its capital needs. Increases in debt-equity ratio and equity multiplier indicate heightened reliance on debt for growth. This reliance is confirmed by a rise in long-term debt ratio. A slight uptick in WACC suggests higher borrowing costs. Decreases in current and quick ratios imply liquidity challenges. Combined with negative profit margin and reduced asset turnover, these indicate operational inefficiencies driving capital requirements._\n",
        "\n",
        "\n",
        "_The observed changes in the company's financial ratios suggest several factors influencing its need for capital. The increase in the debt-equity ratio, coupled with a higher equity multiplier, indicates that the company has been leveraging more, relying increasingly on debt to finance its operations or growth. This reliance on debt is further corroborated by the rise in the long-term debt ratio. The slight uptick in the WACC suggests that this additional debt might be coming at a higher cost, which could be due to increased market interest rates or a perceived higher risk by lenders. However, the decreased current and quick ratios point to a weakening in short-term liquidity, implying that the company might be struggling to meet its immediate obligations. This, combined with a negative profit margin, may be driving the need for capital to fund day-to-day operations rather than for long-term investments. The reduction in the total asset turnover ratio indicates that the company is not generating revenues from its assets as efficiently as it used to, which could mean that it's holding longer-life assets that aren't contributing effectively to revenue generation. The decline in the market to book ratio suggests that the market may not have a favorable view of the company's growth prospects, perhaps due to these less productive assets or other operational challenges. Given these factors, it seems that the company's need for capital is being driven by a combination of operational inefficiencies, possibly underperforming longer-life assets, and a higher reliance on debt, which may not be sustainable without an improvement in profitability and asset turnover. The financial strategy may need to focus on optimizing current asset utilization and possibly divesting underperforming longer-life assets to improve liquidity and operational performance._\n",
        "\n",
        "\n",
        "## Ratio analysis and comparison vs group\n",
        "_Key ratios for RDUS_"
      ],
      "id": "9f575572"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "# intial 11 ratios for RDUS introduction.\n",
        "import pandas as pd\n",
        "\n",
        "# data for the table\n",
        "data = {\n",
        "    'Last year quarterly average': [0.9253, 1.9253, 0.3638, 11.0103, 9.0268, 1.8071, 0.4185, 0.9202, -0.0101, 4.0185, 0.4639],\n",
        "    '7 years quarterly average': [0.8226, 1.8226, 0.3250, 11.0299, 8.9715, 2.0870, 0.4589, 1.1065, 0.0287, 22.5852, 0.6125]\n",
        "}\n",
        "\n",
        "# Define the index for the table\n",
        "index = [\n",
        "    'Debt-Equity Ratio',\n",
        "    'Equity Multiplier',\n",
        "    'Long-term Debt Ratio',\n",
        "    'WACC Cost of Equity',\n",
        "    'Weighted Average Cost of Capital (WACC)',\n",
        "    'Current Ratio',\n",
        "    'Total Asset Turnover',\n",
        "    'Quick Ratio',\n",
        "    'Profit Margin',\n",
        "    'Time Interest Earned Ratio',\n",
        "    'Market to Book Ratio'\n",
        "]\n",
        "\n",
        "# Create the DataFrame\n",
        "df = pd.DataFrame(data, index=index)\n",
        "\n",
        "# Display the DataFrame\n",
        "df\n"
      ],
      "id": "5c4008b5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "_Debt-Equity Ratio: Last year quarterly average: 0.9253, and 7 years quarterly average: 0.8226. The debt-equity ratio has increased from 0.8226 to 0.9253. This suggests that the company has taken on more debt relative to its equity over the last year. An increase in this ratio indicates higher financial leverage, which could imply greater risk if the company faces difficulties in meeting its debt obligations._\n",
        "_Equity Multiplier: Last year quarterly average: 1.9253, and 7 years quarterly average: 1.8226. The equity multiplier has risen from 1.8226 to 1.9253, indicating that the company has increased its reliance on debt financing compared to equity. This can enhance earnings per share if used effectively, but also increases the risk of financial distress if earnings do not suffice to cover the additional interest expense._\n",
        "_Long-term Debt Ratio: Last year quarterly average: 0.3638, and 7 years quarterly average: 0.3250. The long-term debt ratio has gone up from 0.3250 to 0.3638. This means that a larger portion of the company's assets is financed by long-term debt. While this could allow for more investment in growth, it also implies a higher burden of debt repayment in the future._ \n",
        "_WACC Cost of Equity: Last year quarterly average: 11.0103, and 7 years quarterly average: 11.0299. There has been a slight decrease in the cost of equity from 11.0299 to 11.0103. This minimal change suggests stability in the investors' required return for investing in the company's equity._\n",
        "_Weighted Average Cost of Capital (WACC): Last year quarterly average: 9.0268, and 7 years quarterly average: 8.9715. The WACC has increased slightly from 8.9715 to 9.0268. This implies that the overall cost of financing the company's operations has increased, potentially due to a higher cost of debt or a shift in the capital structure towards more expensive sources of capital._\n",
        "_Current Ratio: Last year quarterly average: 1.8071, and years quarterly average: 2.0870. The current ratio has decreased from 2.0870 to 1.8071. This may indicate that the company has a lower cushion to cover its short-term liabilities with its short-term assets. Typically, a higher current ratio is preferred for indicating better short-term financial health._\n",
        "_Total Asset Turnover: Last year quarterly average: 0.4185, and 7 years quarterly average: 0.4589. The total asset turnover has decreased from 0.4589 to 0.4185. A lower ratio suggests the company is not utilizing its assets as efficiently as before to generate sales. This might reflect a less efficient use of assets or slower growth in sales._\n",
        "_Quick Ratio: Last year quarterly average: 0.9202, and 7 years quarterly average: 1.1065. The quick ratio has declined from 1.1065 to 0.9202, indicating a decrease in the company's ability to meet its short-term obligations without relying on the sale of inventories. This suggests less liquidity and potentially more risk in the short term._\n",
        "_Profit Margin: Last year quarterly average: -0.0101, and 7 years quarterly average: 0.0287. The profit margin has turned negative, moving from 0.0287 to -0.0101. This indicates that the company has moved from being profitable to incurring losses, which is a concerning trend for the company's operational efficiency and profitability._ \n",
        "_Times Interest Earned Ratio: Last year quarterly average: 4.0185, and 7 years quarterly average: 22.5852. The times interest earned ratio has drastically decreased from 22.5852 to 4.0185. This significant reduction suggests that the company's operating income can now cover the interest expense only 4 times, compared to over 22 times previously, signaling a potential risk in the company's ability to service its debt._ \n",
        "_Market to Book Ratio: Last year quarterly average: 0.4639, and 7 years quarterly average: 0.6125 The market to book ratio has decreased from 0.6125 to 0.4639. This indicates that the market is valuing the company's equity at a lower level relative to the book value of the equity. It suggests that investors might perceive the company as being at higher risk or having lower growth prospects._\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Ratio Report for all six Comapies\n",
        "\n",
        "__RDUS - Radius Health Inc., CLH - Clean Harbors Inc., CWST - Casella Waste Systems Inc., NVRI - Enviri Corporation Inc., RSG - Republic Services Inc., and WM - Waste Management Inc.__\n",
        "\n",
        "_The comparison between RDUS and the group average for key financial ratios show the following insights:_ _Cost of Equity (CAPM): RDUS has a CAPM Average of 11.03%, which is slightly above the group average of 9.96%. This suggests RDUS may have higher expectations for returns compared to its peers, possibly reflecting a higher risk profile. Current Ratio: With a Current Ratio Average of 2.09, RDUS exceeds the group average of 1.41. This indicates RDUS has a stronger short-term liquidity position, potentially reducing the need for short-term financing. Debt to Equity: RDUS's Debt to Equity Average stands at 0.82, which is only slightly above the group mean of 0.73. This indicates that RDUS is moderately leveraged when compared to its peers and may still have room to take on debt if needed. Profit Margin: The group's Profit Margin Average is 7.37%, with RDUS trailing at 2.87%. This lower profitability metric for RDUS suggests that it's not capitalizing on revenues as effectively as the average firm in the group. For working capital needs, companies with higher current ratios, like RDUS, might require less temporary working capital due to better liquidity. Conversely, firms with lower current ratios, like RSG, might rely more on short-term funding sources, indicating a different working capital management strategy. In terms of long-term financing preferences, firms with higher debt-to-equity ratios may exhibit a preference for equity to avoid over-leveraging, which can be crucial for maintaining financial flexibility. RDUS, having a moderate debt-to-equity ratio, suggests a balanced approach to using debt financing. Firms preferring longer-life assets might have lower depreciation rates (RDUS has a 4.41% average in past seven years), and vice versa. This preference could be inferred from the ratios related to asset depreciation and PPE (Property, Plant, and Equipment) to total assets. RDUS PPE to assets is 43.89%._ \n"
      ],
      "id": "2daa672e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "import pandas as pd\n",
        "\n",
        "pd.set_option('display.max_columns', None)  # This line sets the display to show all columns\n",
        "\n",
        "\n",
        "\n",
        "# Load the Excel file # excel file rename: rdustermtwo\n",
        "df = pd.read_excel(\"https://github.com/1Ramirez7/uni_data/raw/refs/heads/main/455/rdustermtwo.xlsx\")\n",
        "# Company names and their corresponding columns in the dataframe\n",
        "companies = {\n",
        "    \"RDUS\": \"Q_RDUS\",\n",
        "    \"CLH\": \"Q_CLH\",\n",
        "    \"CWST\": \"Q_CWST\",\n",
        "    \"NVRI\": \"Q_NVRI\",\n",
        "    \"RSG\": \"Q_RSG\",\n",
        "    \"WM\": \"Q_WM\"\n",
        "}\n",
        "\n",
        "# to add a new metric. Only need to add new metric name here. ------Metric---\n",
        "# Suffix for metric names\n",
        "average_suffix = \" Average\"\n",
        "std_dev_suffix = \" Std Dev\"\n",
        "\n",
        "# Mapping of financial metric column suffixes to base names\n",
        "metric_bases = {\n",
        "    '35WACC Cost of Equity_': 'CAPM',\n",
        "    '37Weighted Average Cost of Cap_': 'WACC',\n",
        "    '65Return on Equity (ROE)_': 'ROE',\n",
        "    '68Profit margin - 1_': 'Profit',\n",
        "    '66Retun on Assets (ROA) - 2_': 'ROA',\n",
        "    '84Equity multiplier - 3_': 'Equity Multiplier',\n",
        "    '29Diluted EPS - 4_': 'EPS',\n",
        "    '52debt-equity ratio - 5_': 'Debt to Equity',\n",
        "    '51Total debt ratio - 6_': 'Total Debt Ratio',\n",
        "    '55Times interest earned ratio - 7_': 'Times Interest Earned Ratio',\n",
        "    '85Total asset turnover - 8_': 'Total Asset Turnover',\n",
        "    '67ROA using EBIT instead of net inc - 9_': 'ROA (EBIT)',\n",
        "    '71PPE to Asset ratio - 10_': 'PPE to Total Asset',\n",
        "    '72Market to Book ratio - 11_': 'Market to Book Ratio',\n",
        "    '73Depreciation to asset ratio - 12_': 'Depreciation to Asset',\n",
        "    '74Retained earnings to asset ratio - 13_': 'Retained Earnings to Asset',\n",
        "    '46Current ratio - 14_': 'Current Ratio'\n",
        "}\n",
        "\n",
        "# Dictionary to store the averages\n",
        "statistics = {}\n",
        "\n",
        "# When adding a new metric this is the second place I need to add. I will add the code formula for the new metric here ----------metric formula----------\n",
        "# Calculating metrics for each company and each financial metric\n",
        "for company in companies:\n",
        "    statistics[company] = {}\n",
        "    for metric_column_suffix, metric_base_name in metric_bases.items():\n",
        "        column_name = metric_column_suffix + company\n",
        "        average_value = df[column_name].mean()\n",
        "        std_dev_value = df[column_name].std()\n",
        "        statistics[company][metric_base_name + average_suffix] = average_value\n",
        "        statistics[company][metric_base_name + std_dev_suffix] = std_dev_value\n",
        "\n",
        "# Printing the results \n",
        "#for company, stats in statistics.items():\n",
        "#    print(f\"{company}:\")\n",
        "#    for stat_name, value in stats.items():\n",
        "#        print(f\"  {stat_name}: {value:.5f}\")\n",
        "#    print()\n",
        "\n",
        "# this is for Quarto as print does not do so well.\n",
        "# Convert the statistics dictionary to a DataFrame\n",
        "stats_df = pd.DataFrame.from_dict(statistics)\n",
        "\n",
        "# Transpose the DataFrame so that companies are on the rows and metrics are on the columns\n",
        "stats_df = stats_df.transpose()\n",
        "\n",
        "# Display the DataFrame in a formatted table\n",
        "stats_df\n"
      ],
      "id": "4c5135ba",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## WACC, CAPM, and ROE Group Comparison\n",
        "\n",
        "__The following graphs show the quarterly WACC, CAPM (WACC cost of equity), and ROE for each company in the group for the past 28 quarters with Q4 2023 as the latest report.__\n",
        "\n",
        "_The subsequent analysis examines the quarterly trends of Weighted Average Cost of Capital (WACC), Capital Asset Pricing Model (CAPM), and Return on Equity (ROE) for RDUS and the group spanning 28 quarters up to Q4 2023. An upward trajectory in CAPM suggests heightened investor demands for return, potentially attributable to increased market volatility, RDUS's stock beta, or a surge in the market risk premium. Notably, both CAPM and WACC exhibit a consistent upward trend, indicating a rising cost of capital for RDUS, with periodic disparities reflecting shifts in the company's capital structure or market conditions._\n",
        "_If CAPM is increasing, it suggests that investors require a higher rate of return to compensate for the higher perceived risk associated with RDUS's equity. This could be due to increasing market volatility, a higher beta for RDUS's stock indicating that it is more volatile than the market, or an increase in the market risk premium._ _WACC Trend: WACC considers the cost of equity (as given by CAPM) but also includes the costs of other types of financing such as debt and preferred stock, weighted by their proportion in the company's capital structure. The trend of WACC is indicative of the overall cost of financing for RDUS. An increasing WACC could mean that the company's borrowing costs are increasing, or it could reflect a shift toward more expensive forms of capital like equity._ \n",
        "_Both CAPM and WACC are trending upwards over time, which implies that the cost of capital for RDUS is increasing. The gap between CAPM and WACC at certain points could indicate changes in the company's capital structure, such as issuing more equity or debt, changes in the risk-free rate, market risk premium, or the company's beta. The gap noticeably becomes greater during covid, but that had to do a lot with all the government covid packages, but putting the covid abnormality aside, starting with Q1 of 2022 we can see a larger gap between WACC and CAPM, and it has kept about the same distance since. If the CAPM consistently sits above WACC, it might suggest that equity is a more expensive source of capital for RDUS than debt or other forms of financing. RDUS might be seen as becoming riskier (hence the increasing CAPM), or it may be utilizing more expensive capital which increases the WACC._ _From a strategic standpoint, RDUS might consider the following based on these patterns: - Reassessing Risk: Understand why the expected return on equity is rising. If it's due to an increased beta, they might want to look into why their stock is more volatile and if there are ways to mitigate this risk. - Capital Restructuring: If WACC is increasing, it might be beneficial for the company to reassess its capital structure. It might be advantageous to shift towards more debt financing if it can be obtained at lower interest rates, assuming the company isn't already too leveraged. - Operational Efficiency: Implement strategies to improve operational efficiency and profitability which can lead to a lower perceived risk and, consequently, a lower cost of capital. - Investor Communication: Clearly communicate with investors to manage expectations and provide transparency about the company's risk management strategies and future outlook. Strategic considerations for RDUS include risk reassessment, capital restructuring, operational efficiency improvements, and transparent investor communication to manage expectations amidst evolving financial dynamics. Detailed research follows on WACC, CAPM, ROE, and capital structure will complement this analysis, offering deeper insights into RDUS and its competitive landscape._\n"
      ],
      "id": "8ce551a8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "import pandas as pd\n",
        "import plotly.graph_objects as go\n",
        "from plotly.subplots import make_subplots\n",
        "\n",
        "# File path # excel file rename: rdustermtwo\n",
        "df = pd.read_excel(\"https://github.com/1Ramirez7/uni_data/raw/refs/heads/main/455/rdustermtwo.xlsx\")\n",
        "\n",
        "# Company names and their corresponding columns in the dataframe\n",
        "companies = {\n",
        "    \"RDUS\": \"Q_RDUS\",\n",
        "    \"CLH\": \"Q_CLH\",\n",
        "    \"CWST\": \"Q_CWST\",\n",
        "    \"NVRI\": \"Q_NVRI\",\n",
        "    \"RSG\": \"Q_RSG\",\n",
        "    \"WM\": \"Q_WM\"\n",
        "}\n",
        "\n",
        "# Plotting WACC, CAPM, and ROE for each company\n",
        "for company, q_column in companies.items():\n",
        "    fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n",
        "\n",
        "    # WACC and CAPM on primary y-axis\n",
        "    fig.add_trace(go.Scatter(x=df[q_column], y=df['35WACC Cost of Equity_' + company], name='CAPM'), secondary_y=False)\n",
        "    fig.add_trace(go.Scatter(x=df[q_column], y=df['37Weighted Average Cost of Cap_' + company], name='WACC'), secondary_y=False)\n",
        "\n",
        "    # ROE on secondary y-axis\n",
        "    fig.add_trace(go.Scatter(x=df[q_column], y=df['65Return on Equity (ROE)_' + company], name='ROE'), secondary_y=True)\n",
        "\n",
        "    # Update layout\n",
        "    fig.update_layout(title=f'{company} WACC, CAPM, & ROE Comparison', title_x=0.5)\n",
        "    fig.update_xaxes(title_text='')\n",
        "    fig.update_yaxes(title_text='WACC & CAPM', secondary_y=False)\n",
        "    fig.update_yaxes(title_text='ROE (%)', tickformat=\".2%\", secondary_y=True)\n",
        "    fig.update_layout(legend=dict(x=.85, y=1, traceorder=\"normal\"))\n",
        "\n",
        "    fig.show()\n"
      ],
      "id": "19d14f2d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Profit Margin Comparison\n",
        "\n",
        "__In this sample of 28 quaters (Q1 2017 - Q4 2023), RDUS almost always has the lowest profit margin, and beginning in 2022 they started a negative down trend__\n",
        "\n",
        "_Radius Recycling has a profit average of 2.87%, which is below the group average of 6.14%. This suggest RDUS is less profitable than the average of its competitors. When compared individually, RDUS has a lower profit average than all listed competitors. This indicates that RDUS's performance in terms of profit margin is weaker. In term of standard deviation, RDUS has a profit Std Dev of 3.4%, which is below the group average of 7.37%. This suggests that RDUS's profits are less volatile than the average of its competitors._\n",
        "_RDUS has a lower Profit Std Dev compared to CWST (10.30%) and NVRI (20.67%), indicating that RDUS's earnings are more stable and less risky. However, RSG (3.23%) and WM (3.02%) have even lower standard deviations, implying that while RDUS has stable profit margins, some competitors are achieving stability with higher average profits._"
      ],
      "id": "35b2c2bf"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "# profit table for RDUS and group\n",
        "import pandas as pd\n",
        "\n",
        "# Data \n",
        "data = {\n",
        "    'RDUS': [2.87, 3.40],\n",
        "    'CLH': [4.30, 3.60],\n",
        "    'CWST': [3.58, 10.30],\n",
        "    'NVRI': [3.88, 20.67],\n",
        "    'RSG': [10.86, 3.23],\n",
        "    'WM': [11.37, 3.02],\n",
        "    'group average': [6.14, 7.37]\n",
        "}\n",
        "\n",
        "# Define the index for the table\n",
        "index = [\n",
        "    'Profit Average',\n",
        "    'Profit Std Dev'\n",
        "]\n",
        "\n",
        "# Create the DataFrame\n",
        "df_financial_metrics = pd.DataFrame(data, index=index)\n",
        "# Display \n",
        "df_financial_metrics"
      ],
      "id": "00d862d7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "_RDUS appears to be less profitable than its competitors. This could be a concern for investors looking for companies with strong profit margins. RDUS may need to look into operational efficiencies, cost management, or revenue enhancement strategies to improve profitability. The lower standard deviation of RDUS's profits suggests that the company has a more predictable profit performance. For risk-averse investors, this might be attractive. However, the lower profitability coupled with lower risk might not satisfy investors seeking higher returns for higher risk._ _RDUS may need to assess its competitive strategies and operational execution. The key focus could be on areas that drive profitability—such as product mix, pricing strategies, market expansion, and cost control. Additionally, RDUS may benefit from a review of its risk management strategies to ensure that while maintaining stable profits, it is not overly conservative in opportunities for growth.From an investment perspective, RDUS might be considered a more conservative play with its stable but lower profit margins. Investors looking for steady performance with lower variability might find RDUS suitable. However, for growth-oriented investors, the companies with higher profit averages and reasonable standard deviations (like RSG and WM) could be more attractive. The following two graphs display the profit margins for the six companies, with CWST, an NVRI in their on graph due to major data outliers from each are distorting the rest of the companies._\n"
      ],
      "id": "6b0f06c4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "# profit comparisons, two grpahs, one to seperate outliers. \n",
        "import pandas as pd\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "# File path # excel file rename: rdustermtwo\n",
        "df = pd.read_excel(\"https://github.com/1Ramirez7/uni_data/raw/refs/heads/main/455/rdustermtwo.xlsx\")\n",
        "\n",
        "# Company groups\n",
        "companies_group1 = ['RDUS', 'CLH', 'RSG', 'WM']\n",
        "companies_group2 = ['CWST', 'NVRI']\n",
        "\n",
        "# Create the first figure and add traces for the first group of companies\n",
        "fig1 = go.Figure()\n",
        "for company in companies_group1:\n",
        "    fig1.add_trace(go.Scatter(x=df['Q_' + company], y=df['68Profit margin - 1_' + company], name=company))\n",
        "\n",
        "fig1.update_layout(title='Profit Margin Comparison - Group 1', title_x=0.5)\n",
        "fig1.update_xaxes(title_text='Date')\n",
        "fig1.update_yaxes(title_text='', tickformat=\".2%\", range=[-.05, .27])\n",
        "fig1.update_layout(legend=dict(x=.85, y=1, traceorder=\"normal\"))\n",
        "fig1.show()\n",
        "\n",
        "# Create the second figure and add traces for the second group of companies\n",
        "fig2 = go.Figure()\n",
        "for company in companies_group2:\n",
        "    fig2.add_trace(go.Scatter(x=df['Q_' + company], y=df['68Profit margin - 1_' + company], name=company))\n",
        "\n",
        "fig2.update_layout(title='Profit Margin Comparison - Group 2', title_x=0.5)\n",
        "fig2.update_xaxes(title_text='Date')\n",
        "fig2.update_yaxes(title_text='', tickformat=\".2%\")\n",
        "fig2.update_layout(legend=dict(x=.85, y=1, traceorder=\"normal\"))\n",
        "fig2.show()\n"
      ],
      "id": "04dc21d2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n"
      ],
      "id": "fe02ff9a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false"
      ],
      "id": "689125d5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Financial Leverage, EPS, and ROE: A Comparison\n",
        "\n",
        "__The Effect of Financial Leverage__\n",
        "\n",
        "__Current vs proposed Capital Structure Analysis:__\n",
        "_The total assets remain unchanged at $1,692,654 for both scenarios. In the proposed structure, the company is considering taking on $846,327 in debt, indicating a debt-to-equity ratio of 1. The share price remains at $26 for both structures. The number of shares outstanding is almost halved in the proposed structure, from 27,863 to 13,932. The interest rate is constant at 0.60%.\n",
        "With the proposed debt in RDUS's capital structure, financial leverage shows the negative impact of poor operational performance (negative EBIT). Although leverage can enhance returns when a company is profitable, in RDUS's case, it increases losses, leading to a worse ROE and lower EPS. This is especially concerning during a recession, where the ability to cover interest expenses becomes more challenging.\n",
        "Current Performance vs. Recession vs Growth: Now (Expected Scenario): Currently, with no debt, RDUS is performing poorly (negative EBIT), but the losses per share and the ROE are less severe than they would be with the proposed capital structure. Recession: In a recession, the negative impact is increase due to the interest expense, leading to larger losses per share and a lower ROE. Growth (Expansion): In a growth scenario, although the company would still incur losses, the proposed structure would result in a smaller loss per share compared to the current structure due to the reduction in the number of shares outstanding, but it is still more detrimental to ROE because of the interest payments. In summary, RDUS's proposed leverage increases the risk to shareholders by magnifying the impact of operational performance on ROE and EPS. This effect is more noticicble in adverse economic conditions, such as a recession._\n"
      ],
      "id": "855a3786"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "import numpy as np\n",
        "\n",
        "# Define the x and y values\n",
        "x1_values = [-35170.11, -22987, -10803.89]\n",
        "y1_values = [-1.262251373, -0.825000897, -0.387750422]\n",
        "\n",
        "x2_values = [-35170.11, -22987, -10803.89]\n",
        "y2_values = [-2.179242006, -1.304741054, -0.430240103]\n",
        "\n",
        "# Perform linear regression to get the slope and intercept\n",
        "m1, b1 = np.polyfit(x1_values, y1_values, 1)\n",
        "m2, b2 = np.polyfit(x2_values, y2_values, 1)\n",
        "\n",
        "# Calculate the regression lines\n",
        "x1_regression_line = np.linspace(min(x1_values)-60000, max(x1_values)+120000, 100)\n",
        "y1_regression_line = m1 * x1_regression_line + b1\n",
        "\n",
        "x2_regression_line = np.linspace(min(x2_values)-60000, max(x2_values)+120000, 100)\n",
        "y2_regression_line = m2 * x2_regression_line + b2\n",
        "\n",
        "# Calculate intersection point\n",
        "intersection_x = (b2 - b1) / (m1 - m2)\n",
        "intersection_y = m1 * intersection_x + b1\n",
        "\n",
        "# Create traces\n",
        "trace1 = go.Scatter(x=x1_values, y=y1_values, mode='markers', name='', showlegend=False)\n",
        "trace2 = go.Scatter(x=x2_values, y=y2_values, mode='markers', name='', showlegend=False)\n",
        "regression_trace1 = go.Scatter(x=x1_regression_line, y=y1_regression_line, mode='lines', name='Current')\n",
        "regression_trace2 = go.Scatter(x=x2_regression_line, y=y2_regression_line, mode='lines', name='Proposed')\n",
        "\n",
        "# Create lines from axes to intersection point\n",
        "x_axis_to_intersection = go.Scatter(x=[intersection_x, intersection_x], y=[0, intersection_y], mode='lines', line=dict(dash='dash'), name='', showlegend=False)\n",
        "y_axis_to_intersection = go.Scatter(x=[0, intersection_x], y=[intersection_y, intersection_y], mode='lines', line=dict(dash='dash'), name='', showlegend=False)\n",
        "\n",
        "# Create dot at intersection point\n",
        "intersection_dot = go.Scatter(x=[intersection_x], y=[intersection_y], mode='markers', marker=dict(size=10, color='red'), name='', showlegend=False)\n",
        "intersection_label = go.Scatter(x=[intersection_x], y=[intersection_y], mode='text', text=['Break-even-point'], textposition='bottom right', name='', showlegend=False)\n",
        "\n",
        "# Create the figure\n",
        "fig = go.Figure()\n",
        "\n",
        "# Add traces to the figure\n",
        "fig.add_trace(trace1)\n",
        "fig.add_trace(trace2)\n",
        "fig.add_trace(regression_trace1)\n",
        "fig.add_trace(regression_trace2)\n",
        "fig.add_trace(x_axis_to_intersection)\n",
        "fig.add_trace(y_axis_to_intersection)\n",
        "fig.add_trace(intersection_dot)\n",
        "fig.add_trace(intersection_label)\n",
        "\n",
        "# Update layout\n",
        "fig.update_layout(title='Financial leverage: Debt vs No Debt',\n",
        "                  xaxis_title='Earnings before Interest & Taxes',\n",
        "                  yaxis_title='Earnings per Share ($)',\n",
        "                  xaxis=dict(range=[min(x1_values + x2_values)-20000, max(x1_values + x2_values)+60000], zeroline=True, zerolinewidth=2, zerolinecolor='black'),\n",
        "                  yaxis=dict(range=[min(y1_values + y2_values)-0.5, max(y1_values + y2_values)+2.5], zeroline=True, zerolinewidth=2, zerolinecolor='black'))\n",
        "\n",
        "# Show the figure\n",
        "fig.show()\n"
      ],
      "id": "b1d331ca",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "_This next example is assuming RDUS where to go back to their Q3 2019 Total debt ratio of .36. This will mean that RDUS will have to lower their debt to 36.4% from 47.8% of total debt, which will mirror an increase in equity from 52.2% to 63.5% of total assets. RDUS is actually in the center points so adding debt will lower the EPS from ($0.82) to ($1.04). RDUS should not take on debt as they are better off now. There is a higher chance of going into a recession then an expansion. In case of a recession the EPS with no extra debt will be at ($1.26), and with debt it will be at ($1.74). RDUS is better off in improving EBIT as that will benefit them the most at this point. Hovering over the line of the current line we can see that what earnings RDUS to obtain the EPS in the corresponding Y-axis value. Both EBIT and EPS will show when hovering over the lines and or dots. _\n"
      ],
      "id": "b1ad748c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "# The data here is wrong as debt ratio is different from debt to assets. \n",
        "# RDUS BReak-even EBIT if RDUS if RDUS where to go back to their Q3 2019 debt ratio. \n",
        "\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "import numpy as np\n",
        "\n",
        "# Simplified Code\n",
        "\n",
        "# Define the x and y values\n",
        "x_values = [-35170.11, -22987, -10803.89]\n",
        "y1_values = [-1.262251373, -0.825000897, -0.387750422]\n",
        "y2_values = [-1.73817138932708, -1.04066623420661, -0.343161079086133]\n",
        "\n",
        "# Perform linear regression to get the slope and intercept\n",
        "m1, b1 = np.polyfit(x_values, y1_values, 1)\n",
        "m2, b2 = np.polyfit(x_values, y2_values, 1)\n",
        "\n",
        "# Calculate the regression lines using list comprehension\n",
        "x_regression_line = np.linspace(min(x_values)-60000, max(x_values)+120000, 100)\n",
        "y1_regression_line = [m1 * x + b1 for x in x_regression_line]\n",
        "y2_regression_line = [m2 * x + b2 for x in x_regression_line]\n",
        "\n",
        "# Calculate intersection point\n",
        "intersection_x = (b2 - b1) / (m1 - m2)\n",
        "intersection_y = m1 * intersection_x + b1\n",
        "\n",
        "# Calculate adjustment for text position\n",
        "text_offset = 0.5\n",
        "\n",
        "# Create traces with updated names and showlegend properties\n",
        "traces = [\n",
        "    go.Scatter(x=x_values, y=y1_values, mode='markers', name='', showlegend=False),\n",
        "    go.Scatter(x=x_values, y=y2_values, mode='markers', name='', showlegend=False),\n",
        "    \n",
        "    go.Scatter(x=x_regression_line, y=y1_regression_line, mode='lines', name='Current'),\n",
        "    go.Scatter(x=x_regression_line, y=y2_regression_line, mode='lines', name='Debt'),\n",
        "    go.Scatter(x=[intersection_x, intersection_x], y=[0, intersection_y], mode='lines', line=dict(dash='dash'), name='', showlegend=False),\n",
        "    go.Scatter(x=[0, intersection_x], y=[intersection_y, intersection_y], mode='lines', line=dict(dash='dash'), name='', showlegend=False),\n",
        "    go.Scatter(x=[intersection_x], y=[intersection_y], mode='markers', marker=dict(size=10, color='red'), name='', showlegend=False),\n",
        "    go.Scatter(x=[intersection_x + text_offset], y=[intersection_y - text_offset], mode='text', text=['Break-even-point'], textposition='bottom right', name='', showlegend=False)\n",
        "]\n",
        "\n",
        "# Create the figure and add traces\n",
        "fig = go.Figure(data=traces)\n",
        "\n",
        "# Update layout\n",
        "fig.update_layout(\n",
        "    title='Break-Even EBIT if RDUS ',\n",
        "    xaxis_title='Earnings before Interest & Taxes',\n",
        "    yaxis_title='Earnings per Share ($)',\n",
        "    xaxis=dict(range=[min(x_values)-20000, max(x_values)+60000], zeroline=True, zerolinewidth=2, zerolinecolor='black'),\n",
        "    yaxis=dict(range=[min(y1_values + y2_values)-0.5, max(y1_values + y2_values)+2.5], zeroline=True, zerolinewidth=2, zerolinecolor='black')\n",
        ")\n",
        "\n",
        "# Show the figure\n",
        "fig.show()\n"
      ],
      "id": "710dc748",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "_In this chart the 7 year quaterly average for total assets, Debt, equity, share price, commmon stock, and EBIT for RDUS are use to do the break-even comparison. It is noticible that RDUS has historically been able to pay a dividend. In this example we have RDUS take on $129 million in debt to buy back 4,285 common shares. We can see that shareholders can benefit from RDUS taking on more debt in this situation because they will be earning a higher EPS. This research shows RDUS is very well fit to profit, but its main problem is making a profit. The increasing sin the equity multiplier, and long-term debt ratio have increase for RDUS showing that RDUS has taken on debt for their new capital investments, and this investment have more than a year. RDUS can go from earning negative earnings to making a profit by selling some of their debts and cutting their loses. _\n"
      ],
      "id": "be1167ec"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "# Break-even EBIT using historical averages. \n",
        "\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "import numpy as np\n",
        "\n",
        "# Simplified Code\n",
        "\n",
        "# Define the x and y values\n",
        "x_values = [11881.882, 25280.6, 38679.318]\n",
        "y1_values = [0.4364253213575, 0.928564513526596, 1.42070370569569]\n",
        "y2_values = [0.409771506790385, 0.993829808407207, 1.57788811002403\n",
        "]\n",
        "\n",
        "# Perform linear regression to get the slope and intercept\n",
        "m1, b1 = np.polyfit(x_values, y1_values, 1)\n",
        "m2, b2 = np.polyfit(x_values, y2_values, 1)\n",
        "\n",
        "# Calculate the regression lines using list comprehension\n",
        "x_regression_line = np.linspace(min(x_values)-60000, max(x_values)+120000, 100)\n",
        "y1_regression_line = [m1 * x + b1 for x in x_regression_line]\n",
        "y2_regression_line = [m2 * x + b2 for x in x_regression_line]\n",
        "\n",
        "# Calculate intersection point\n",
        "intersection_x = (b2 - b1) / (m1 - m2)\n",
        "intersection_y = m1 * intersection_x + b1\n",
        "\n",
        "# Calculate adjustment for text position\n",
        "text_offset = 0.5\n",
        "\n",
        "# Create traces with updated names and showlegend properties\n",
        "traces = [\n",
        "    go.Scatter(x=x_values, y=y1_values, mode='markers', name='', showlegend=False),\n",
        "    go.Scatter(x=x_values, y=y2_values, mode='markers', name='', showlegend=False),\n",
        "    \n",
        "    go.Scatter(x=x_regression_line, y=y1_regression_line, mode='lines', name='Current'),\n",
        "    go.Scatter(x=x_regression_line, y=y2_regression_line, mode='lines', name='Debt'),\n",
        "    go.Scatter(x=[intersection_x, intersection_x], y=[0, intersection_y], mode='lines', line=dict(dash='dash'), name='', showlegend=False),\n",
        "    go.Scatter(x=[0, intersection_x], y=[intersection_y, intersection_y], mode='lines', line=dict(dash='dash'), name='', showlegend=False),\n",
        "    go.Scatter(x=[intersection_x], y=[intersection_y], mode='markers', marker=dict(size=10, color='red'), name='', showlegend=False),\n",
        "    go.Scatter(x=[intersection_x + text_offset], y=[intersection_y - text_offset], mode='text', text=['Break-even-point'], textposition='bottom right', name='', showlegend=False)\n",
        "]\n",
        "\n",
        "# Create the figure and add traces\n",
        "fig = go.Figure(data=traces)\n",
        "\n",
        "# Update layout\n",
        "fig.update_layout(\n",
        "    title='7 year average for variables: Break-Even EBIT if RDUS takes on Debt vs no Debt ',\n",
        "    xaxis_title='Earnings before Interest & Taxes',\n",
        "    yaxis_title='Earnings per Share ($)',\n",
        "    xaxis=dict(range=[min(x_values)-10000, max(x_values)+10000], zeroline=True, zerolinewidth=2, zerolinecolor='black'),\n",
        "    yaxis=dict(range=[min(y1_values + y2_values)-.5, max(y1_values + y2_values)+.5], zeroline=True, zerolinewidth=2, zerolinecolor='black')\n",
        ")\n",
        "\n",
        "# Show the figure\n",
        "fig.show()\n"
      ],
      "id": "b66eb549",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Optimal Capital Structure for RDUS\n",
        "\n",
        "\n",
        "_The optimal capital structure for RDUS, using their current cost of capital of 12.01%, corporate tax rate of 21%. We found RDUS optimal capital structure to be 40.48% D*/E* and a WACC of 11.76%. RDUS current D/E is 98.6% which is extremely high. This shows RDUS is using a lot of debt to finance and grow the value of the firm, but all this debt is actually costing them. They should work towards lowering their debt to improve their capital structure, but they have been doing the opposite these past few years where they have been expanding. They opted to end leases to purchase properties, and that is part of their high debt. This high debt is also helping them obtain a good tax rate, but at a cost. As we can see in the break-even EBIT figure, RDUS's negative earnings are hurting them and they will be better off without debt according to the break-even EBIT model and the optimal capital structure._\n"
      ],
      "id": "ac0aa7e6"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "# The Static Theory of Capital Structure: The Optimal Capital  Structure and the  Cost of Capital\n",
        "# Pg 561 in book\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "import numpy as np\n",
        "from scipy.interpolate import interp1d\n",
        "\n",
        "# Given WACC, RU, RE, and D/E values\n",
        "WACC = np.array([0.1219, 0.12022592, 0.118915831, 0.118017781, 0.117595616, 0.117735128, 0.118553412, 0.120213529, 0.122948367, 0.127101203, 0.133198373])\n",
        "DE = np.array([0.000, 0.076, 0.162, 0.260, 0.373, 0.503, 0.656, 0.837, 1.057, 1.328, 1.670])\n",
        "RU = np.array([0.1219, 0.1219, 0.1219, 0.1219, 0.1219, 0.1219, 0.1219, 0.1219, 0.1219, 0.1219, 0.1219])\n",
        "RE = np.array([0.1219, 0.1244, 0.1273, 0.1305, 0.1342, 0.1386, 0.1436, 0.1496, 0.1569, 0.1658, 0.1772])\n",
        "\n",
        "\n",
        "\n",
        "# Interpolate WACC, RU, and RE\n",
        "WACC_interp = interp1d(DE, WACC, kind='cubic')\n",
        "RU_interp = interp1d(DE, RU, kind='cubic')\n",
        "RE_interp = interp1d(DE, RE, kind='cubic')\n",
        "\n",
        "# Generate new DE values for interpolation\n",
        "DE_new = np.linspace(min(DE), max(DE), 100)\n",
        "\n",
        "# Calculate values for WACC, RU, and RE\n",
        "WACC_new = WACC_interp(DE_new)\n",
        "RU_new = RU_interp(DE_new)\n",
        "RE_new = RE_interp(DE_new)\n",
        "\n",
        "# Find the index of the minimum WACC value\n",
        "min_WACC_index = np.argmin(WACC_new)\n",
        "# Get the corresponding DE_new value\n",
        "min_WACC_DE = DE_new[min_WACC_index]\n",
        "\n",
        "# Create the figure\n",
        "fig = go.Figure()\n",
        "\n",
        "# Add traces\n",
        "fig.add_trace(go.Scatter(x=DE, y=WACC, mode='markers', name='', showlegend=False, marker=dict(color='blue'))) # WACC markers\n",
        "fig.add_trace(go.Scatter(x=DE_new, y=WACC_new, mode='lines', name='WACC', line=dict(color='blue'))) # WACC line\n",
        "fig.add_trace(go.Scatter(x=DE, y=RU, mode='markers', name='', showlegend=False, marker=dict(color='red'))) # RU markers\n",
        "fig.add_trace(go.Scatter(x=DE_new, y=RU_new, mode='lines', name='RU', line=dict(color='red'))) # RU line\n",
        "# fig.add_trace(go.Scatter(x=DE, y=RE, mode='markers', name='', showlegend=False, marker=dict(color='green'))) # RE markers\n",
        "# fig.add_trace(go.Scatter(x=DE_new, y=RE_new, mode='lines', name='RE', line=dict(color='green'))) # RE line\n",
        "\n",
        "# Add a vertical line at the point where WACC is minimum\n",
        "fig.add_shape(type=\"line\",\n",
        "              x0=min_WACC_DE, y0=min(WACC_new),\n",
        "              x1=min_WACC_DE, y1=max(WACC_new),\n",
        "              line=dict(color=\"blue\", width=2))\n",
        "\n",
        "# Add text to the line\n",
        "fig.add_annotation(\n",
        "    x=min_WACC_DE + 0.20,  # Adjust the offset as needed\n",
        "    y=(min(WACC_new) + max(WACC_new)) / 2,  # Placing text at the center of the line\n",
        "    text=\"Optimal WACC\",\n",
        "    showarrow=False,\n",
        "    font=dict(\n",
        "        size=14,\n",
        "        color=\"blue\"\n",
        "    ),\n",
        "    align=\"left\",  # Align text to the left of the anchor point\n",
        ")\n",
        "\n",
        "\n",
        "\n",
        "# Set plot layout\n",
        "fig.update_layout(title='OPTIMAL CAPITAL STRUCTURE AND THE COST OF CAPITAL', xaxis_title='Debt-equity ratio (D/E)', yaxis_title='Cost of capital (%)')\n",
        "\n",
        "# Show plot\n",
        "fig.show()\n"
      ],
      "id": "f630ed67",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "_This graph is the same form above, but this one includes the RE line for visual. The previous graph is displayed better without the RE to notice the WACC thrend._\n"
      ],
      "id": "a5bcf296"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "import numpy as np\n",
        "from scipy.interpolate import interp1d\n",
        "\n",
        "# Given WACC, RU, RE, and D/E values\n",
        "WACC = np.array([0.1219, 0.12022592, 0.118915831, 0.118017781, 0.117595616, 0.117735128, 0.118553412, 0.120213529, 0.122948367, 0.127101203, 0.133198373])\n",
        "DE = np.array([0.000, 0.076, 0.162, 0.260, 0.373, 0.503, 0.656, 0.837, 1.057, 1.328, 1.670])\n",
        "RU = np.full_like(WACC, 0.1219)\n",
        "RE = np.array([0.1219, 0.1244, 0.1273, 0.1305, 0.1342, 0.1386, 0.1436, 0.1496, 0.1569, 0.1658, 0.1772])\n",
        "\n",
        "# Interpolate WACC, RU, and RE\n",
        "WACC_interp, RU_interp, RE_interp = [interp1d(DE, values, kind='cubic') for values in (WACC, RU, RE)]\n",
        "\n",
        "# Generate new DE values for interpolation\n",
        "DE_new = np.linspace(min(DE), max(DE), 100)\n",
        "\n",
        "# Calculate values for WACC, RU, and RE\n",
        "WACC_new, RU_new, RE_new = [interp(DE_new) for interp in (WACC_interp, RU_interp, RE_interp)]\n",
        "\n",
        "# Find the index of the minimum WACC value\n",
        "min_WACC_index = np.argmin(WACC_new)\n",
        "min_WACC_DE = DE_new[min_WACC_index]\n",
        "\n",
        "# Create the figure\n",
        "fig = go.Figure()\n",
        "\n",
        "# Add traces\n",
        "for values, name, color in zip([WACC, RU, RE], ['WACC', 'RU', 'RE'], ['blue', 'red', 'green']):\n",
        "    fig.add_trace(go.Scatter(x=DE, y=values, mode='markers', name='', showlegend=False, marker=dict(color=color)))\n",
        "    fig.add_trace(go.Scatter(x=DE_new, y=interp1d(DE, values, kind='cubic')(DE_new), mode='lines', name=name, line=dict(color=color)))\n",
        "\n",
        "# Add a vertical line at the point where WACC is minimum\n",
        "fig.add_shape(type=\"line\", x0=min_WACC_DE, y0=min(WACC_new), x1=min_WACC_DE, y1=max(WACC_new), line=dict(color=\"blue\", width=2))\n",
        "\n",
        "# Add text to the line\n",
        "fig.add_annotation(x=min_WACC_DE + 0.20, y=(min(WACC_new) + max(WACC_new)) / 2, text=\"Optimal WACC\", showarrow=False, font=dict(size=14, color=\"blue\"), align=\"left\")\n",
        "\n",
        "# Set plot layout\n",
        "fig.update_layout(title='OPTIMAL CAPITAL STRUCTURE AND THE COST OF CAPITAL', xaxis_title='Debt-equity ratio (D/E)', yaxis_title='Cost of capital (%)')\n",
        "\n",
        "# Show plot\n",
        "fig.show()\n"
      ],
      "id": "a19beae5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Conclusion\n",
        "\n",
        "__Dupont, Pro-Forma Income Statement and Balance Sheet results__\n",
        "\n",
        "_The financial strategy for Radius Recycling. The DuPont analysis, which breaks down the components of Return on Equity (ROE), and the pro-forma income statement and balance sheet analysis, reveal that a 10% increase in sales does not significantly improve RDUS's financial health due to the accompanying increase in costs. The scenarios with an EBIT of $0 and an EBIT of $22 million paint a clearer picture of the company's financial health under different operating performances._\n"
      ],
      "id": "59bea272"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "# Data for the table provided by the user, redefined since the execution state was reset\n",
        "data = {\n",
        "    '10% in sales increase': [-1.94, -1.01, -2.55, 1.914, 0.398, -25285.70, -18853.70],\n",
        "    'EBIT of $0': [0.73, 0.38, 0.96, 1.914, 0.398, None, 6432.00],\n",
        "    'EBIT of 22 Million': [3.22, 1.68, 4.23, 1.914, 0.398, 22000.00, 28432.00],\n",
        "    'Current': [-1.87, -0.98, -2.46, 1.914, 0.398, -22987.00, -16555.00]\n",
        "}\n",
        "\n",
        "# Define the index for the table\n",
        "index = [\n",
        "    'Return on Equity',\n",
        "    'ROA',\n",
        "    'Profit Margin',\n",
        "    'Equity Multiplier',\n",
        "    'Total Asset Turnover',\n",
        "    'EBIT',\n",
        "    'Net income'\n",
        "]\n",
        "\n",
        "# Create the DataFrame\n",
        "df_financial_metrics = pd.DataFrame(data, index=index)\n",
        "\n",
        "# Formatting Return on Equity, ROA, and Profit Margin as percentages\n",
        "df_financial_metrics.iloc[:3] = df_financial_metrics.iloc[:3].applymap(lambda x: \"{:.2f}%\".format(x))\n",
        "\n",
        "# Formatting EBIT and Net income as currency\n",
        "# We need to convert to float, round the numbers, and then format\n",
        "df_financial_metrics.loc['EBIT'] = df_financial_metrics.loc['EBIT'].apply(lambda x: \"${:,.0f}\".format(round(x)) if pd.notnull(x) else \"-\")\n",
        "df_financial_metrics.loc['Net income'] = df_financial_metrics.loc['Net income'].apply(lambda x: \"${:,.0f}\".format(round(x)))\n",
        "\n",
        "# \n",
        "df_financial_metrics.columns.name = '2023 Q4 Financials'\n",
        "\n",
        "df_financial_metrics\n"
      ],
      "id": "6d8f7ecd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "__When we compare the three scenarios:__\n",
        "\n",
        "_10% in sales increase: RDUS experiences a negative ROE of -1.94% and a net loss of $18,853.70. This suggests that simply boosting sales is insufficient, as it likely increases costs proportionately, thus failing to enhance shareholder value._\n",
        "_EBIT of $0: This scenario likely represents a break-even point in operations, where RDUS manages a positive, albeit low, ROE of 0.73% and a small net income of $6,432.00. This indicates that even without profit, the company's financial structure can produce a positive outcome for shareholders._\n",
        "_EBIT of 22 Million: This is the most favorable scenario, showcasing a robust ROE of 3.22% and a substantial net income of $28,432.00. This demonstrates that improving operational efficiency to increase EBIT has a significant positive impact on financial performance._\n",
        "_The financial indicators strongly suggest that RDUS should prioritize improving EBIT and reducing operational costs. This approach aligns with the company's financial trend analysis, which indicates operational inefficiencies and an over-reliance on debt, as evidenced by the increased debt-equity ratio and the equity multiplier. Additional research from the paper supports this conclusion. For instance, the dramatic shift in the EPS growth rate and the negative trend in growth during the first quarter of 2024 indicate that capital investments have not been yielding the expected returns. The company's increased borrowing costs and operational inefficiencies necessitate strategic adjustments. The high debt-to-equity ratio and reliance on debt financing not only diminish financial flexibility but also increase the cost of capital, making it imperative for RDUS to focus on operational efficiencies and possibly divest underperforming assets. Lastly, the optimal capital structure analysis suggests that RDUS's current high debt-to-equity ratio of 98.6% is far from the optimal 40.48% D/E. The high level of debt financing is costly, as indicated by the WACC of 12.01%, compared to the optimal WACC of 11.76%. RDUS should work towards rebalancing its capital structure by reducing debt to lower its cost of capital and improve profitability._\n",
        "_In conclusion, RDUS's financial analyses and historical performance data underscore the need for a strategic shift toward improving EBIT and lowering operational costs. The best path forward for RDUS, supported by both DuPont analysis and various financial metrics, is to enhance operational efficiency and optimize its capital structure to achieve sustainable growth and profitability._"
      ],
      "id": "b3f5ca92"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\git\\Portfolio_\\.venv\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}