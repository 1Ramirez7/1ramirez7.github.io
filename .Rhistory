reticulate::repl_python()
#| echo: true
# Step 1: Import the data from Git Hub
import pandas as pd
# Read the CSV file for Amazon stock data
amzn = pd.read_csv('https://raw.githubusercontent.com/dylanjm/econ_381_development/master/data/AMZN.csv')
# Step 2: Convert the date variable to a datetime object
# Note: Ensure that the column name for the date variable in your dataset matches 'Date'
amzn['Date'] = pd.to_datetime(amzn['Date'])
# Step 3: Make the time series plot using Matplotlib
import matplotlib.pyplot as plt
# Plotting the time series data
plt.plot(amzn['Date'], amzn['Close'])  # Assuming 'Close' column is used as the price variable
# Customizing the plot
plt.xlabel('Date')
plt.ylabel('Price')
plt.title('Amazon Stock Price Over Time')
plt.grid(True)
# Show the plot
plt.show()
load("C:/git/Portfolio_/.RData")
quarto::quarto_path()
install.packages("quarto")
quarto::quarto_path()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
browseURL("docs/index.html")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,
tsibble,
tsibbledata,
fable,
fable.prophet,
feasts,
patchwork,
lubridate,
rio,
ggplot2,
kableExtra,
tidyquant,
plotly)
R.version.string
quarto::quarto_check()
Sys.setenv(R_HOME = "C:/Program Files/R/R-4.4.3")
quarto::quarto_render()
quarto check
remove.packages("quarto")
install.packages("quarto")
quarto::quarto_render()
quarto check
quarto check.options()
quarto check
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
use_virtualenv(".venv", required = TRUE)
library(reticulate)
use_python(".venv/Scripts/python.exe", required = TRUE)
reticulate::repl_python()
py_config()
library(reticulate)
py_config()
virtualenv_create("venv")
library(reticulate)
py_config()
virtualenv_create("venv")
library(reticulate)
virtualenv_create(envname = ".venv", python = "C:/Users/eduar/AppData/Local/Programs/Python/Python312/python.exe")
unlink("C:/Users/eduar/OneDrive - BYU-Idaho/Documents/.virtualenvs/.venv", recursive = TRUE, force = TRUE)
library(reticulate)
py_config()
library(reticulate) #loads python env
py_config() # confirm using root env
.\.venv\Scripts\activate
py_install(c("pandas", "numpy", "matplotlib"))
reticulate::repl_python()
py_install(c("matplotlib", "seaborn", "numpy", "statsmodels"))
reticulate::repl_python()
library(reticulate) #loads python env
use_virtualenv("C:/git/Portfolio_/.venv", required = TRUE) # optional
py_config() # confirm using root env
py_install(c("jupyter"))
py_install(c("plotly"))
reticulate::repl_python()
py_install(c("notebook", "ipykernel", "PyYAML"))
reticulate::repl_python()
py_install(c("sklearn"))
reticulate::repl_python()
py_install(c("sklearn"))
py_install(c("scikit-learn"))
reticulate::repl_python()
