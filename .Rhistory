#| echo: false
import pandas as pd
pd.set_option('display.max_columns', None)  # This line sets the display to show all columns
# Load the Excel file # excel file rename: rdustermtwo
df = pd.read_excel("https://github.com/1Ramirez7/uni_data/raw/refs/heads/main/455/rdustermtwo.xlsx")
# Company names and their corresponding columns in the dataframe
companies = {
"RDUS": "Q_RDUS",
"CLH": "Q_CLH",
"CWST": "Q_CWST",
"NVRI": "Q_NVRI",
"RSG": "Q_RSG",
"WM": "Q_WM"
}
# to add a new metric. Only need to add new metric name here. ------Metric---
# Suffix for metric names
average_suffix = " Average"
std_dev_suffix = " Std Dev"
# Mapping of financial metric column suffixes to base names
metric_bases = {
'35WACC Cost of Equity_': 'CAPM',
'37Weighted Average Cost of Cap_': 'WACC',
'65Return on Equity (ROE)_': 'ROE',
'68Profit margin - 1_': 'Profit',
'66Retun on Assets (ROA) - 2_': 'ROA',
'84Equity multiplier - 3_': 'Equity Multiplier',
'29Diluted EPS - 4_': 'EPS',
'52debt-equity ratio - 5_': 'Debt to Equity',
'51Total debt ratio - 6_': 'Total Debt Ratio',
'55Times interest earned ratio - 7_': 'Times Interest Earned Ratio',
'85Total asset turnover - 8_': 'Total Asset Turnover',
'67ROA using EBIT instead of net inc - 9_': 'ROA (EBIT)',
'71PPE to Asset ratio - 10_': 'PPE to Total Asset',
'72Market to Book ratio - 11_': 'Market to Book Ratio',
'73Depreciation to asset ratio - 12_': 'Depreciation to Asset',
'74Retained earnings to asset ratio - 13_': 'Retained Earnings to Asset',
'46Current ratio - 14_': 'Current Ratio'
}
# Dictionary to store the averages
statistics = {}
# When adding a new metric this is the second place I need to add. I will add the code formula for the new metric here ----------metric formula----------
# Calculating metrics for each company and each financial metric
for company in companies:
statistics[company] = {}
for metric_column_suffix, metric_base_name in metric_bases.items():
column_name = metric_column_suffix + company
average_value = df[column_name].mean()
std_dev_value = df[column_name].std()
statistics[company][metric_base_name + average_suffix] = average_value
statistics[company][metric_base_name + std_dev_suffix] = std_dev_value
# Printing the results
#for company, stats in statistics.items():
#    print(f"{company}:")
#    for stat_name, value in stats.items():
#        print(f"  {stat_name}: {value:.5f}")
#    print()
# this is for Quarto as print does not do so well.
# Convert the statistics dictionary to a DataFrame
stats_df = pd.DataFrame.from_dict(statistics)
# Transpose the DataFrame so that companies are on the rows and metrics are on the columns
stats_df = stats_df.transpose()
# Display the DataFrame in a formatted table
stats_df
reticulate::repl_python()
